What is a Foreign Key?
A foreign key in SQL is a field (or collection of fields) in one table that refers to the primary key in another table. It is used to establish a relationship between two tables and to enforce referential integrity.


 Key Concepts:
A primary key uniquely identifies each row in a table.
A foreign key ensures that the value in one table must match a value in another table (or be NULL).
It prevents invalid data from being inserted into the referencing table.

Think of two tables:

Students table → has a student ID (primary key).
Scholarships table → stores scholarship details for students using student ID as a foreign key.
This means a scholarship must be assigned to a student that already exists in the Students table.

CREATE TABLE Students (
    STUDENT_ID INT PRIMARY KEY,
    FIRST_NAME VARCHAR(50)
);


CREATE TABLE Scholarships (
    SCHOLARSHIP_ID INT PRIMARY KEY,
    STUDENT_ID INT,
    AMOUNT INT,
    FOREIGN KEY (STUDENT_ID) REFERENCES Students(STUDENT_ID)
);


-- Insert into Students
INSERT INTO Students (STUDENT_ID, FIRST_NAME)
VALUES (1, 'Raj'), (2, 'Amit');

-- Valid: STUDENT_ID 1 exists
INSERT INTO Scholarships (SCHOLARSHIP_ID, STUDENT_ID, AMOUNT)
VALUES (101, 1, 5000);

-- ❌ Invalid: STUDENT_ID 5 does NOT exist in Students
INSERT INTO Scholarships (SCHOLARSHIP_ID, STUDENT_ID, AMOUNT)
VALUES (102, 5, 4500); -- This will throw an error!


Benefits of Foreign Keys:

Ensures data consistency
Prevents orphan records (e.g., scholarships for non-existent students)
Supports relational database design
